services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${TARGET:-development}
      args:
        - TARGET=${TARGET:-development}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - FORCE_COLOR=1
    volumes:
      - /app/node_modules
      - ./:/app
    depends_on:
      - db
    env_file: .env
    tty: true
    stdin_open: true
  db:
    image: postgres:17
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  db-test:
    image: postgres:17
    env_file: .env.test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb_v2_test
    ports:
      - "5433:5432"
    volumes:
      - db-test-data:/var/lib/postgresql/data
  migrator:
    image: node:24-alpine
    working_dir: /app
    volumes:
      - ./:/app
    env_file: .env
    environment:
      - CI=true
    depends_on:
      - db
    command: >
      sh -c "
        corepack enable || true &&
        corepack prepare pnpm@latest --activate || true &&
        pnpm install --frozen-lockfile &&
        npx prisma generate &&
        npx prisma migrate deploy
      "
    restart: "no"

volumes:
  db-data:
  db-test-data:
